

---------------------------------------------------------------------------------------------------------------------------------

# Why is '1' is not appearing in the result?
thisset = {"apple", "banana", "cherry", True, 1, 2}
print(thisset)


# ANSWER
True and 1 is considered the same value and are treated as duplicates.

---------------------------------------------------------------------------------------------------------------------------------

# What is the result of the following code? why?
thisset = {"apple", "banana", "cherry", "apple"}
print(thisset)


# ANSWER
Sets cannot have two items with the same value.

---------------------------------------------------------------------------------------------------------------------------------

# Check if a word is present in a list?
# Check if the word 'channel' is present in the following list.
# OUTPUT POSSIBLE = False
# OUTPUT POSSIBLE = True
list = ['bricks', 'neutrals', 'criticism', 'enjoyment', 'witches', 'embarrassment', 'creations', 'education', 'ceiling', 'ruin', 'retailer', 'midst', 'hand', 'transaction', 'reminders', 'harmony', 'suppression', 'side', 'cruise', 'gardens', 'snowflake', 'lightning', 'rage', 'punishment', 'strategy', 'spectator', 'muscles', 'wheel', 'discovery', 'leakage']


# SOLUTION
list = ['bricks', 'neutrals', 'criticism', 'enjoyment', 'witches', 'embarrassment', 'creations', 'education', 'ceiling', 'ruin', 'retailer', 'midst', 'hand', 'transaction', 'reminders', 'harmony', 'suppression', 'side', 'cruise', 'gardens', 'snowflake', 'lightning', 'rage', 'punishment', 'strategy', 'spectator', 'muscles', 'wheel', 'discovery', 'leakage']
print("channel" in list)

---------------------------------------------------------------------------------------------------------------------------------

# Print results with incremental value
# Print each element from the list with the word 'fruit' and a following incremental number.
# OUTPUT
# fruit1
# fruit2
# fruit3
list = ["apple", "banana", "cherry"]


# SOLUTION
list = ["apple", "banana", "cherry"]
counter = 0
for x in list:
    print(f"fruit{counter}")
    counter += 1

---------------------------------------------------------------------------------------------------------------------------------

# Add items from one set to another set
# Add items from 'tropical_fruits' set into the 'fruits' set.
# OUTPUT
# {'apple', 'papaya', 'rambutan', 'banana', 'cherry', 'mango'}
fruits = {"apple", "banana", "cherry"}
tropical_fruits = {"mango", "papaya", "rambutan"}


# SOLUTION 1
fruits = {"apple", "banana", "cherry"}
tropical_fruits = {"mango", "papaya", "rambutan"}
fruits.update(tropical_fruits)
print(fruits)

# SOLUTION 2
fruits = {"apple", "banana", "cherry"}
tropical_fruits = {"mango", "papaya", "rambutan"}
all_fruits = fruits.union(tropical_fruits)
print(all_fruits)

---------------------------------------------------------------------------------------------------------------------------------

# HACKERRANK | Sequence of numbers from 0 to n | Square of each number 
# Ex: The list of non-negative integers that are less than n = 3 is [0, 1, 2].
# Print the square of each number on a separate line.
# INPUT = 5
# OUTPUT
# 0
# 1
# 4
# 9
# 16


# SOLUTION
def square(n):
    return "\n".join(str(i * i) for i in range(0, n))

n = int(input("Enter your number: "))
print(square(n))

---------------------------------------------------------------------------------------------------------------------------------

# Create a loop that iterates over the indices of the list (which is 0 to 3 in this case).
# For each index 'i', print the element at that index in the list.
# OUTPUT 
# apple
# orange
# strawberry
# tomato
thislist = ["apple", "orange", "strawberry", "tomato"]


# SOLUTION
# Loop through the list items by referring to their index number
# Use the range() and len() functions to create a suitable iterable
thislist = ["apple", "orange", "strawberry", "tomato"]
for i in range (len(thislist)):
    print(thislist[i])

---------------------------------------------------------------------------------------------------------------------------------

# HACKERRANK | Sequence of numbers from 1 to n
# Generate a sequence of numbers from 1 to n concatenated together as a string.
# Include user input.
# INPUT = 3
# OUTPUT = 123


# SOLUTION
def number_sequence(n):
    return " ".join(str(i) for i in range(1, n + 1))

# Getting user input
n = int(input("Enter a number: "))

# Printing the output
print(number_sequence(n))

---------------------------------------------------------------------------------------------------------------------------------

# Define a Python function that calculates the square of a given number and then prints the result using a function call.
# INPUT = 3
# OUTPUT = 9


# SOLUTION
# function definition
def find_square(num):
    result = num * num
    return result

# function call
square = find_square(3)
print("Square:", square)

---------------------------------------------------------------------------------------------------------------------------------

# Write a function that takes a single parameter x and returns the result of multiplying x by 5. Then, call this function with the argument 3 and print the result.
# INPUT = 3
# OUTPUT = 15


# SOLUTION
def my_function(x):
  return 5 * x

print(my_function(3))

---------------------------------------------------------------------------------------------------------------------------------

# Based on list fruits, create a new list containing only the fruits with the letter "a" in the name.
# OUTPUT
# ["apple", "banana", "mango"]
fruits = ["apple", "banana", "cherry", "kiwi", "mango"]

# SOLUTION 1 
fruits = ["apple", "banana", "cherry", "kiwi", "mango"]
newlist = []
for x in fruits:
    if "a" in x:
        newlist.append(x)
print(newlist)

# SOLUTION 2 == list comprehension
fruits = ["apple", "banana", "cherry", "kiwi", "mango"]
newlist = [x for x in fruits if "a" in x]
print(newlist)
