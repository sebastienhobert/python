"""
FILTERING ARRAYS
Getting some elements out of an existing array and creating a new array out of them is called filtering.
In NumPy, you filter an array using a boolean index list.
NOTE- A boolean index list is a list of booleans corresponding to indexes in the array.
"""

"""
If the value at an array is True that element is contained in the filtered array, if the value at the index is False that element is excluded from the filtered array.
"""
#Ex: create an array from the elements on index 0 and 2
import numpy as np
arr = np.array([41, 42, 43, 44])
x = [True, False, True, False]
newarr = arr[x]
print(newarr)
#The example above will return [41, 43], why?
#Because the new array contains only the values where the filter array had the value True, in this case, index 0 and 2


"""
CREATING THE FILTER ARRAY
In the example above we hard-coded the True and False values, but the common use is to create a filter array based on conditions.
"""
#Ex: create a filter array that will return only values higher than 42
import numpy as np
arr = np.array([41, 42, 43, 44])
# Create an empty list
filter_arr = []
# go through each element in arr
for element in arr:
  # if the element is higher than 42, set the value to True, otherwise False:
  if element > 42:
    filter_arr.append(True)
  else:
    filter_arr.append(False)
newarr = arr[filter_arr]
print(filter_arr)
print(newarr)

