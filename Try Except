"""
The try block lets you test a block of code for errors
The except block lets you handle the error
The else block lets you execute code when there is no error
The finally block lets you execute code, regardless of the result of the try- and except blocks
"""


"""
EXCEPTION HANDLING
When an error occurs, or exception as we call it, Python will normally stop and generate an error message
These exceptions can be handled using the try statement 
"""
#Ex: the try block will generate an exception, because x is not defined
try:
    print(x)
except:
    print("An exception occured")


"""
Since the try block raise an error, the except block will be executed
Without the try block, the program will crash and raise an error
"""
#Ex: this statement will raise an error, because x is not defined
print(x)


"""
MANY EXCEPTIONS
You can define as many exception blocks as you want, e.g. if you want to execute a special block of code for a special kind of error
"""
#Ex: print one message if the try block raises a NameError and another for other errors
try:
    print(x)
except NameError:
    print("Variable x is not defined")
except:
    print("Something else went wrong")



"""
ELSE
You can use the else keyword to define a block of code to be executed if no errors were raised
"""
#Ex: in this example, the try block does not generate any error
try:
    print("Hello")
except:
    print("Something went wrong")
else:
    print("Nothing went wrong")



"""
FINALLY
The finally block, if specified, will be executed regardless if the try block raises an error or not
"""
try:
    print(x)
except:
    print("Something went wrong")
finally:
    print("The 'try except' is finished")



"""
This can be useful to close objects and clean up resources
"""
#Ex: try to open and write to a file that is not writable
try:
    f = open("demofile.txt")
    try:
        f.write("Lorem Ipsum")
    except:
        print("Something went wrong writing to the file")
    finally:
        f.close()
except:
    print("Something went wrong when opening the file")
